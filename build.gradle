plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.0.0'

    id 'maven-publish'
}

group 'YAPI'
version '1.2-SNAPSHOT'

ext {
    uberJarName = "${group}-${version}-all.jar"
    jarName = "${group}-${version}.jar"
    archive = "${rootDir}/archive"
    libs = "${buildDir}/libs"
}

sourceCompatibility = 1.12
targetCompatibility = 1.12

mainClassName = 'main.InteractiveMain'

repositories {
    jcenter()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile 'ch.obermuhlner:big-math:2.3.0'
    compile 'org.fusesource.jansi:jansi:1.18'

//    compile 'org.jcuda:jcuda:10.1.0'
//    compile 'org.jcuda:jcublas:10.1.0'
//    compile 'org.jcuda:jcufft:10.1.0'
//    compile 'org.jcuda:jcusparse:10.1.0'
//    compile 'org.jcuda:jcusolver:10.1.0'
//    compile 'org.jcuda:jcurand:10.1.0'
//    compile 'org.jcuda:jnvgraph:10.1.0'
//    compile 'org.jcuda:jcudnn:10.1.0'
}

jar {
    manifest {
        attributes(
                'Main-Class': mainClassName
        )
    }
}



publishing {
    repositories {
        maven {
            url = "${rootDir}/releases"
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = 'yoyosource'
            artifactId = 'YAPI'
            version = '1.2-3.1'

            from components.java
        }
    }
}



task YAPILicense {
    description 'Add the License to every file'
    group "YAPI"

    mustRunAfter classes

    doLast {
        def command = "java -classpath ${buildDir}/classes/java/main main.LicenseSystem ${buildDir}"
        def retval = command.execute().text
        print(retval)
    }
}
shadowJar.dependsOn YAPILicense

task YAPIInfo {
    description 'Create the Interactive Main Info file'
    group "YAPI"

    mustRunAfter YAPILicense

    doLast {
        def command = "java -classpath ${buildDir}/classes/java/main main.CreateInteractiveMain ${buildDir}"
        def retval = command.execute().text
        print(retval)
    }
}
shadowJar.dependsOn YAPIInfo

task buildYAPI {
    description 'Build YAPI'
    group "YAPI"

    dependsOn 'shadowJar'
    //dependsOn 'compileJava'

    doLast {
        if ("${buildDir}" == null) {
            return
        }
        delete fileTree("${libs}").matching {
            include "${jarName}"
        }
        delete fileTree("${archive}").matching {
            include "${jarName}"
        }
        copy {
            from("${libs}")
            into("${archive}")
            exclude("${uberJarName}")
        }
        delete fileTree("${libs}").matching {
            exclude("${uberJarName}")
        }
        file(libs + "/" + uberJarName).renameTo(file(libs + "/" + jarName))
        /*copy {
            from("${libs}")
            into("${libs}")
            rename("${uberJarName}", "${jarName}")
        }*/
        /*delete fileTree("${libs}").matching {
            include "${uberJarName}"
        }*/
    }
}
